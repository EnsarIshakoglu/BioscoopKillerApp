@using System.Linq
@using System.Security.Claims
@using System.Threading
@using BioscoopKillerApp.Controllers
@model MovieDetailViewModel
@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "MovieDetails";
    var userId = -1;
}

<html>
<head>
    @*
        <style class="vjs-styles-defaults">
            .vdo-js {
                width: 300px;
                height: 150px;
            }

            .vjs-fluid {
                padding-top: 56.25%
            }
        </style>*@
    <title>Cinema A Entertainment Category Flat Bootstrap Responsive Website Template | Single :: w3layouts</title>
    @*<link href="~/lib/bootstrap/dist/css/MovieDetail/movie-detail-bootstrap.css" rel="stylesheet" type="text/css">*@
    <!-- Custom Theme files -->
    <link href="~/lib/bootstrap/dist/css/MovieDetail/movie-detail-style.css" rel="stylesheet" type="text/css" media="all">
    <!-- Custom Theme files -->
    <script async="" src="//www.google-analytics.com/analytics.js"></script>
    <script src="~/lib/bootstrap/dist/js/jquery.min.js"></script>
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="keywords" content="">
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
    <!--webfont-->
    <link href="//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800" rel="stylesheet" type="text/css">
    <script defer="" async="" src="https://vdo.ai/core/w3layouts/vdo.ai.js"></script>
    <link id="_vdo_ads_css_5654_" rel="stylesheet" href="https://vdo.ai/core/dependencies_bs/vdo.min.css">
    <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-113932176-8"></script>
</head>
<body style="">

    <!-- header-section-starts -->
<div class="full">

    <div class="main">
        <div class="single-content">

            <div class="reviews-section">
                <div class="col-md-9 reviews-grids">
                    <div class="review">
                        <div class="movie-pic">
                            <a><img src=@Model.Movie.Poster alt=""></a>
                        </div>
                        <div class="review-info">
                            <a class="span">@Model.Movie.Title</a>
                            <div class="clearfix"></div>
                            <div class="clearfix"></div>
                            <p class="info">Actors:&nbsp;@string.Join(", ", @Model.Movie.Actors)</p>
                            <p class="info">Genre:&nbsp;@string.Join(", ", @Model.Movie.Genre)</p>
                            <p class="info">DURATION:&nbsp; @Model.Movie.Runtime</p>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <!---728x90--->

                    <div class="single">
                    </div>

                    <div class="story-review">
                        <h4>SYNOPSIS:</h4>
                        <p>@Model.Movie.Plot</p>
                    </div>
                    <div class="story-review col-xl-12" style="border-top: 0;">
                        <div class="row">
                            <div class="col-xl-6">
                                <h4>AIRINGS:</h4>
                            </div>
                            <div class="col-xl-6">
                                @if (!Model.AiringMovies.Any())
                                {
                                    <p style="font-size: 15px;">Sorry! We have no available airings for this movie!</p>
                                }
                                else
                                {
                                    <select id="selectedDate">
                                        <option value="" selected disabled hidden>Select date</option>
                                        @foreach (var date in @Model.AiringMovies.GroupBy(a => a.AiringTime.Date).Where(a => a.Key.Date >= DateTime.Today.Date))
                                        {
                                            <option value="@date.Key.ToShortDateString()">@date.Key.ToShortDateString()</option>
                                        }

                                    </select>
                                }
                            </div>
                        </div>
                        <p id="selectDateText">Please select a date to view airings.</p>
                        <div class="row" id="airingButtons">

                        </div>



                    </div>
                    <!-- comments-section-starts -->
                    <!---728x90--->

                    <div class="comments-section" style="border-bottom: 3px solid #000">
                        <div class="comments-section-head">
                            <div class="comments-section-head-text">
                                <h3>Comments</h3>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="comments-section-grids">
                            @foreach (var modelReview in Model.Reviews)
                            {
                                @Html.Partial("Comment", modelReview);
                            }
                        </div>
                    </div>
                    <!-- comments-section-ends -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        var sid = User.Claims.First(c => c.Type.Equals(ClaimTypes.Sid)).Value;
                        int.TryParse(sid, out userId);

                        <div class="reply-section">
                            <div class="reply-section-head">
                                <div class="reply-section-head-text">
                                    <h3>Leave Reply</h3>
                                </div>
                            </div>
                            <div class="blog-form">
                                <form>
                                    <input type="text" class="text" value="@User.Identity.Name" disabled="disabled">
                                    <input type="text" class="text" id="reviewTitle" maxlength="100" placeholder="Subject">
                                    <textarea id="reviewText" placeholder="Review" maxlength="2000"></textarea>
                                    <input type="button" id="postReview" value="POST">
                                </form>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="reply-section">
                            <div class="reply-section-head">
                                <div class="reply-section-head-text">
                                    <a href="@Url.Action("LogIn", "User")"><i>Login to leave a reply</i></a>
                                </div>
                            </div>
                        </div>
                    }


                    <div class="clearfix"></div>
                </div>
            </div>

            <!---728x90--->


        </div>
        <div class="clearfix"></div>
    </div>
</div>

</body>
</html>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
     <script>
         $( document ).ready(function() {
             @if (!Model.AiringMovies.Any())
             {
                 <text>  
                     $("#selectDateText").hide();
                 </text>
             }
         });
     </script>
    <script>
        $(function () {
            $('#postReview').on('click', postReview);
        });
    </script>

    <script>
        function postReview() {
            var reviewText = document.getElementById('reviewText').value;
            var reviewTitle = document.getElementById('reviewTitle').value;

            console.log(reviewText);

            var controllerPath = '@Url.Action("PostReview", "User")';

            var verificationToken = $("input[name='__RequestVerificationToken']").val();

            var user = {
                'Id': @userId
            };

            var movie = {
                'Id' : @Model.Movie.Id
            }

            var review = {
                'ReviewText': reviewText,
                'ReviewTitle' : reviewTitle,
                'Movie': movie,
                'User' : user
            };

            $.ajax({
                url: controllerPath,
                data: JSON.stringify(review),
                type: "POST",
                headers: {
                    "RequestVerificationToken": verificationToken
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(result) {
                    console.log("Success");

                    if (result.validationMessage != null) {
                        alert(result.validationMessage);
                    }

                    refreshPage();
                },
                error: function () {
                    console.log("Error");

                    alert('Error creating review, please try again!');
                }
            });
        }
    </script>

    <script>
        function refreshPage() {
            window.location.href = '@Url.Action("MovieDetails", "Movie", Model.Movie)';
        }
    </script>

    <script>
        $('#selectedDate').change(function () {
            $("#selectDateText").hide();

            var selectedDate = $("#selectedDate option:selected").val();
            console.log(selectedDate);
            var verificationToken = $("input[name='__RequestVerificationToken']").val();

            var model = {
                "Movie" : {
                    "Id" : @Model.Movie.Id
                },
                "DateString" : selectedDate
            }

            $.ajax({
                url: '@Url.Action("GetAiringsFromMovieByDate", "Movie")',
                data: JSON.stringify(model),
                type: "POST",
                headers: {
                    "RequestVerificationToken": verificationToken
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("Success!");
                    console.log(result);
                    $("#airingButtons").html(result.responseText);
                    $("#airingButtons").show();

                },
                error: function (result) {
                    console.log("Error");
                    console.log(result);
                    $("#airingButtons").html(result.responseText);
                    $("#airingButtons").show();
                }
            });
        });
    </script>
}